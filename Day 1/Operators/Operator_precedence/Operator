Operator precedence determines the order in which the operators in an expression are evaluated.

   			Operator Precedence table 

	(16) > parentheses () , array access [], member access .  => Left to Right

	(15) > Unary post-increment ++ ,                          => Left to Right
	       Unary post-decrement --              

	(14) > Unary plus  +
	       Unary minus -
	       Unary logical NOT !				  => Right to Left
	       Unary bitwise NOT ~
	       Unary pre-increment ++
	       Unary pre-decrement --

	(13) > Multiplicative  *, / , %	    			  => Left to Right

	(12) > Additive +, -
	       String Conacatenation + 				  => Left to Right

	(11) > Shift  << , >> , >>>				  => Left to Right

	(10) > relational  < , <= , > , >= , instanceof 	  => Left to Right

	(9)  > equality  == , !=				  => Left to Right

	(8)  > Bitwise AND & 					  => Left to Right

	(7)  > Bitwise XOR ^ (Exclusive OR)			  => Left to Right

	(6)  > Bitwise OR | (Inclusive OR)			  => Left to Right
	
	(5)  > Logical AND &&					  => Left to Right

	(4)  > Logical OR  || 					  => Left to Right

	(3)  > Ternary  ?:					  => Right to Left

	(2)  > Assignment
		= , += , -=
		*= , /= , %=					  => Right to Left
		&= , ^= , |=	
		<<= , >>= , >>>=	

	(1) > Lamdba expression arrow ->			  => Right to Left
